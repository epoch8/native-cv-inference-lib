using namespace std;
using namespace cv;

/*
Библиотека реализует пайплайн детекции и распознавания объектов.

Пайплайн состоит из двух частей:

1. Детекция - библиотека находит всех кандидатов в объекты
2. Классификация - для каждого кандидата происходит обработка в соответствии с его типом

Промежуточные результаты возвращаются через callback на каждой стадии
*/


/*
Структура описывающая один объект
*/
struct DetectedObject {
    /*
    Уникальный идентификатор объекта
    Необходим для дедупликации результатов между шагами детекции и классификации
    (Один и тот же объект возвращается дважды, первый раз без свойства class когда найден, 
    второй раз со свойством class и доп свойствами, когда произошла детекция)
    */
    int id;

    /*
    Координаты левого верхнего и правого нижнего угла описывающего прямоугольника
    Принимают значения в диапазоне [0 .. 1]
    */
    float x1, y1, x2, y2;

    /*
    Свойства объекта, могут меняться в зависимости от бизнес-логики

    Основное свойство "class" - std::string - класс объекта
    */
    std::map<std::string, std::any> props;
}


/*
Контекст запуска пайплайна
*/
struct InferenceContext{
    /*
    CV2 матрица, содержит сырое изображение для обработки
    */
    cv::Mat &img;

    /*
    Коллбек для получения частичных результатов инференса, нужен для обеспечения интерактивности
    если объектов на изображении много

    partial_result - некоторое количество 1-10 объектов по которым появилась или обновилась информация

    progress - число в диапазоне [0 .. 1] которое показывает процент завершенности всего пайплайна
    */
    void (*partial_result_callback)(std::vector<DetectedObject> partial_result, float progress);

    /*
    Флаг остановки, на старте должен быть false.
    Может быть изменен внешним способом в true, в этом случае пайплайн будет прерван
    */
    bool should_stop;
};


void run_inference_pipeline(ctx: &InferenceContext);
